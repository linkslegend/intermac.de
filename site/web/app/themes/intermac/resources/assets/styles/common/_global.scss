/* stylelint-disable */
@media (prefers-color-scheme: dark) {
  body {
    --text-color: var(--primary-color);
    --bkg-color: var(--primary-bg-color);
  }
}
/* stylelint-enable */

html {
  font-size: 62.5%;
}

body {
  width: 100%;
  height: 100%;
  overflow: hidden;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-family: "Varela", sans-serif;
  font-size: 2.1rem;
  line-height: 1.65;
  transition: ease 0.25s;
  color: var(--text-color);
  background: var(--primary-bg-color);

  &.blog {
    background: var(--primary-bg-color);
  }

  &.page-template-default {
    background: var(--primary-bg-color);

    .content {
      display: block;

      .main {
        position: relative;

        .container {
          padding-top: 20rem;
          padding-bottom: 10em;
        }
      }
    }
  }
}

.page-header {
  visibility: hidden;
  height: 0;
  padding: 0;
  margin: 0;
}

a {
  color: var(--dark-blue-color);
  font-size: 100%;
  font-weight: 600;

  &:hover {
    color: var(--primary-color);

    &::after {
      transform: translateZ(0) scaleX(1);
      background: var(--primary-bg-color);
    }
  }
}

/* Simple css to style it like a toggle switch */
.theme-switch-wrapper {
  position: absolute;
  right: 0;
  top: 7px;
  display: flex;
  align-items: center;

  em {
    margin-left: 10px;
    font-size: 1rem;
  }
}

.theme-switch {
  display: inline-block;
  height: 21px;
  position: relative;
  width: 40px;

  input {
    display: none;
  }
}

.theme-slider {
  background-color: transparent;
  bottom: 0;
  cursor: pointer;
  border: 2px solid var(--primary-color);
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transition: 0.4s;

  &::before {
    background-color: var(--primary-color);
    bottom: 1px;
    content: "";
    height: 15px;
    left: 3px;
    position: absolute;
    transition: 0.4s;
    width: 15px;
  }
}

input:checked + .theme-slider {
  background-color: var(--light-grey);
  border: 2px solid var(--primary-color);

  &::before {
    transform: translateX(16px);
  }
}

.theme-slider.round {
  border-radius: 34px;

  &::before {
    border-radius: 50%;
  }
}

.is-transitioning {
  pointer-events: none;
  cursor: progress;
}

.bottom {
  bottom: 0 !important;
  top: auto !important;
}

.opacity-0 {
  opacity: 0;
}

.opacity-50 {
  opacity: 0.5;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-80 {
  opacity: 0.8;
}

.opacity-85 {
  opacity: 0.85;
}

.opacity-90 {
  opacity: 0.9;
}

.opacity-95 {
  opacity: 0.95;
}

svg {
  &.xlblob {
    width: 65rem;
    height: 65rem;
  }

  &.lblob {
    width: 55rem;
    height: 55rem;
  }

  &.mblob {
    width: 50rem;
    height: 50rem;
  }

  &#cliping {
    width: 62vmax;
    height: 36em;
    left: -7em;
    display: block;
    top: 7vmax;
    z-index: 6;
    padding: 0;
    margin: 0;
    position: absolute;
  }

  &.right {
    right: -7em;
    left: auto !important;
  }
}

.donut {
  position: absolute;
  width: 17rem;
  height: 17rem;
  background: none;
  will-change: transform;
}

.svg-wrapper {
  position: fixed;
  width: 100vw;
  height: 250vh;
  pointer-events: none;
  background-color: var(--secondary-bg-color);
  z-index: 1;
  visibility: hidden;
  opacity: 0;
}

.navigation.posts-navigation {
  background: $lightgrey;
  padding: 3rem;
  width: 100%;
  height: 100px;
}

#scroll-container {
  width: auto;
  height: 100vh;
  overflow: auto;
  margin: 0;
}

.bgt {
  background-color: $turquoise;
}

.mlg-1 {
  margin-left: 10%;
}

.mrg-1 {
  margin-right: 10%;
}

.mlg-2 {
  margin-left: 20%;
}

.mrg-2 {
  margin-right: 20%;
}

.mlg-3 {
  margin-left: 30%;
}

.mrg-3 {
  margin-right: 30%;
}

.color-white {
  color: $white;
}

.color-dark {
  color: var(--primary-color);
}

[data-scrollbar] {
  overflow: auto;
}

.scrollbar-track {
  background: transparent !important;
}

.scrollbar_thumb {
  display: inline-block;
  width: 0.9rem;
  margin: 0.2rem;
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid hsla(0, 0%, 100%, 0.2);
  border-radius: 0.4rem;
  cursor: grab;
}

.overview {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-align: start;
  align-items: flex-start;
  position: relative;
  z-index: 0;
  padding-bottom: 6rem;
}

.c-indigo {
  background: $blue;
}

#hero_footer,
#hero_round {
  width: 100%;
  position: absolute;

  &.top {
    transform: rotate(180deg);
    top: -5px;
  }

  &.bottom {
    bottom: -5px !important;
  }

  #white {
    fill: var(--bg-color);
  }

  #primary {
    fill: var(--primary-color);
  }

  #secondary {
    fill: var(--secondary-bg-color);
  }

  #secondary-bg-color {
    fill: var(--secondary-bg-color);
  }

  #blue {
    fill: var(--blue-color);
  }

  #darkblue {
    fill: var(--dark-blue-color);
  }

  #lightgrey {
    fill: var(--light-grey);
  }
}

#hero_footer {
  position: relative;
}

.slider-cards {
  position: relative;
  width: 900px;
  margin: 20px 50px;
  z-index: 1;
}

.slider-card {
  display: inline-block;
  background-color: $grey;
  overflow: hidden;
  width: 260px;
  height: 360px;
  margin-right: 30px;
  border-radius: 12px;
  box-shadow: 0 60px 20px -20px rgba(0, 0, 0, 0.3);
}

@include media-breakpoint-between(xs, md) {
  .theme-switch-wrapper {
    right: 60px;
    top: -85px;
  }

  svg {
    &.xlblob {
      width: 35rem;
      height: 35rem;
    }

    &.lblob {
      width: 35rem;
      height: 35rem;
    }

    &.mblob {
      width: 30rem;
      height: 30rem;
    }

    &#cliping {
      width: 70vmax;
      height: auto;
      left: -13em;
      top: 3em;
    }
  }
}

@include media-breakpoint-only(xs) {
  svg {
    &.xlblob {
      width: 35rem;
      height: 35rem;
    }

    &.lblob {
      width: 35rem;
      height: 35rem;
    }

    &.mblob {
      width: 30rem;
      height: 30rem;
    }

    &#cliping {
      width: 50vmax;
      height: auto;
      left: 0;
      top: 7em;
    }
  }
}

/*
animation mixing
keyframe animation
@include animation('animation-name .4s 1')
*/

@mixin animation($animate...) {
  $max: length($animate);
  $animations: "";

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }

  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    $browser: "-webkit-" !global;

    @content;
  }

  @-moz-keyframes #{$animationName} {
    $browser: "-moz-" !global;

    @content;
  }

  @-o-keyframes #{$animationName} {
    $browser: "-o-" !global;

    @content;
  }

  @keyframes #{$animationName} {
    $browser: "" !global;

    @content;
  }
}

$browser: null;
